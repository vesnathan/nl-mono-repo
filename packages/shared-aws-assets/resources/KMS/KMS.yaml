Parameters:
    Stage:
      Type: String
      Description: Deployment stage

Resources:
    KMSRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub nlmonorepo-kms-${Stage}
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: !Sub arn:aws:iam::${AWS::AccountId}:user/nlmonorepo-shared-dev
                Service: cloudformation.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: KMSKeyManagement
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action: kms:*
                  Resource: "*"

    SharedKMSKeyResource: # Renamed from cwlKMSKey for clarity within this template
      Type: AWS::KMS::Key
      Properties:
        Description: "Shared KMS key for S3 and DynamoDB encryption"
        EnableKeyRotation: true
        KeyPolicy:
          Version: "2012-10-17"
          Statement:
            - Sid: "Enable IAM User Permissions"
              Effect: Allow
              Principal:
                AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
              Action: "kms:*"
              Resource: "*"
            - Sid: "Allow AWS Services"
              Effect: Allow
              Principal:
                Service: 
                  - "dynamodb.amazonaws.com"
                  - "s3.amazonaws.com"
              Action:
                - "kms:Decrypt"
                - "kms:GenerateDataKey"
              Resource: "*"

Outputs:
    SharedKMSKey: # Renamed from cwlKMSKey
      Value: !Ref SharedKMSKeyResource
      Export:
        Name: !Sub shared-assets-SharedKMSKey-${Stage} # Export name updated
    
    SharedKMSKeyArn: # Renamed from cwlKMSKeyArn
      Value: !GetAtt SharedKMSKeyResource.Arn
      Export:
        Name: !Sub shared-assets-SharedKMSKeyArn-${Stage} # Export name updated
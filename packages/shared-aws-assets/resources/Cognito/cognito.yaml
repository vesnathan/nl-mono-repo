Parameters:
  Stage:
    Type: String
    Description: Deployment stage

Resources:

  CognitoRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub nl-mono-repo-cognito-${Stage}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:user/nlmonorepo-shared-dev
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CognitoManagement
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cognito-idp:*
                Resource: "*"

  cognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UsernameAttributes:
        - email
      UserPoolName: !Sub "cwlUserPool-${Stage}"
      UserPoolAddOns:
        AdvancedSecurityMode: ENFORCED
      MfaConfiguration: "OPTIONAL"
      EnabledMfas:
        - "SOFTWARE_TOKEN_MFA"

  cognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub "Web-${Stage}"
      UserPoolId: !Ref cognitoUserPool
      PreventUserExistenceErrors: "ENABLED"
      AccessTokenValidity: 30
      IdTokenValidity: 30
      RefreshTokenValidity: 1
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days
      WriteAttributes: []
      ExplicitAuthFlows:
        - "ALLOW_REFRESH_TOKEN_AUTH"
        - "ALLOW_USER_PASSWORD_AUTH"
        - "ALLOW_USER_SRP_AUTH"
      SupportedIdentityProviders:
        - COGNITO
      EnableTokenRevocation: true


  superAdminGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: "SuperAdmin"
      UserPoolId: !Ref cognitoUserPool
      Description: "Administrators of the entire application"
      Precedence: 1


  techCompanyAdminGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: "TechCompanyAdmin"
      UserPoolId: !Ref cognitoUserPool
      Description: "Admins for tech companies"
      Precedence: 2

  techCompanyStaffGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: "TechCompanyStaff"
      UserPoolId: !Ref cognitoUserPool
      Description: "Employees of tech companies"
      Precedence: 2

  eventCompanyAdminGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: "EventCompanyAdmin"
      UserPoolId: !Ref cognitoUserPool
      Description: "Adminis for event companies"
      Precedence: 2

  eventCompanyStaffGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: "EventCompanyStaff"
      UserPoolId: !Ref cognitoUserPool
      Description: "Employees of event companies"
      Precedence: 2

  eventClientAdminGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: "EventClientAdmin"
      UserPoolId: !Ref cognitoUserPool
      Description: "Admins for event clients"
      Precedence: 2

  eventClientStaffGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: "EventClientStaff"
      UserPoolId: !Ref cognitoUserPool
      Description: "Employees of event clients"
      Precedence: 2

  eventSpeakerGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: "EventSpeaker"
      UserPoolId: !Ref cognitoUserPool
      Description: "Event speakers"
      Precedence: 3

  RegisteredAttendeeGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: "RegisteredAttendee"
      UserPoolId: !Ref cognitoUserPool
      Description: "Registered Event attendees"
      Precedence: 3

  UnregisteredAttendeeGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: "UnregisteredAttendee"
      UserPoolId: !Ref cognitoUserPool
      Description: "Unregistered Event attendees"
      Precedence: 3

Outputs:
  cwlUserPoolId:
    Value: !Ref cognitoUserPool
    Export:
      Name: !Sub cwlUserPoolId-${Stage}
  
  cwlUserPoolClientId:
    Value: !Ref cognitoUserPoolClient
    Export:
      Name: !Sub cwlUserPoolClientId-${Stage}

  cwlUserPoolArn:
    Value: !GetAtt cognitoUserPool.Arn
    Export:
      Name: !Sub cwlUserPoolArn-${Stage}
  
  cwlUserPoolProviderName:
    Value: !GetAtt cognitoUserPool.ProviderName
    Export:
      Name: !Sub cwlUserPoolProviderName-${Stage}
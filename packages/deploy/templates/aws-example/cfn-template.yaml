AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS Example Backend Infrastructure"

Parameters:
  Stage:
    Type: String
    Description: Deployment stage (e.g., dev, prod)
    AllowedPattern: ^[a-zA-Z0-9-]+$
  AppName:
    Type: String
    Description: Application short name (used in export names)
    Default: awse
  TemplateBucketName:
    Type: String
    Description: Name of the S3 bucket containing nested stack templates
  KMSKeyId:
    Type: String
    Description: KMS Key ID for encryption
  KMSKeyArn:
    Type: String
    Description: KMS Key ARN for encryption
  WebACLId:
    Type: String
    Description: WAF Web ACL ID from us-east-1 region
  WebACLArn:
    Type: String
    Description: WAF Web ACL ARN from us-east-1 region
  ResolversBuildHash:
    Type: String
    Description: Optional build hash to version resolver S3 keys
  LogRetentionInDays:
    Type: Number
    Description: Number of days to retain CloudWatch Logs for nested stacks
    Default: 14

Resources:
  # DynamoDb Tables
  DynamoDbStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/resources/DynamoDb/dynamoDb.yaml
      Parameters:
        Stage: !Ref Stage
        AppName: !Ref AppName
        KMSKeyArn: !Ref KMSKeyArn

  # S3 Buckets for frontend and assets
  S3Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/resources/S3/s3.yaml
      Parameters:
        Stage: !Ref Stage
        AppName: !Ref AppName
        KMSKeyId: !Ref KMSKeyId

  # Cognito Resources
  CognitoStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/resources/Cognito/cognito.yaml
      Parameters:
        Stage: !Ref Stage
        AppName: !Ref AppName

  # CloudFront Distribution
  CloudFrontStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: S3Stack
    Properties:
      TemplateURL: !Sub https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/resources/CloudFront/cloudfront.yaml
      Parameters:
        Stage: !Ref Stage
        AppName: !Ref AppName
        AppBucketName: !GetAtt S3Stack.Outputs.AWSEBucketName
        AppBucketArn: !GetAtt S3Stack.Outputs.AWSEBucketArn
        AppBucketRegionalDomainName: !GetAtt S3Stack.Outputs.AWSEBucketRegionalDomainName

  # Lambda Functions
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: [CloudFrontStack, CognitoStack]
    Properties:
      TemplateURL: !Sub https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/resources/Lambda/lambda.yaml
      Parameters:
        Stage: !Ref Stage
        AppName: !Ref AppName
        AppCloudFrontDistributionId: !GetAtt CloudFrontStack.Outputs.AWSECloudFrontDistributionId
        AppCloudFrontDomainName: !GetAtt CloudFrontStack.Outputs.AWSECloudFrontDomainName
        FromEmail: noreply@awsexample.com
        AppURL: !Sub "https://${CloudFrontStack.Outputs.AWSECloudFrontDomainName}"
        TemplateBucketName: !Ref TemplateBucketName
        UserPoolId: !GetAtt CognitoStack.Outputs.UserPoolId
        LogRetentionInDays: !Ref LogRetentionInDays

  # AppSync API
  AppSyncStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: [DynamoDbStack, CognitoStack, LambdaStack]
    Properties:
      TemplateURL: !Sub https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/resources/AppSync/appsync.yaml
      Parameters:
        Stage: !Ref Stage
        AppName: !Ref AppName
        TemplateBucketName: !Ref TemplateBucketName
        UserPoolId: !GetAtt CognitoStack.Outputs.UserPoolId
        SendWelcomeEmailFunctionArn: !GetAtt LambdaStack.Outputs.SendWelcomeEmailFunctionArn
        CreateCognitoUserFunctionArn: !GetAtt LambdaStack.Outputs.CreateCognitoUserFunctionArn
        DataTableName: !GetAtt DynamoDbStack.Outputs.DataTableName
        AppSyncDynamoDBRoleArn: !GetAtt DynamoDbStack.Outputs.AppSyncDynamoDBRoleArn
        ResolversBuildHash: !Ref ResolversBuildHash
        LogRetentionInDays: !Ref LogRetentionInDays

Outputs:
  ApiUrl:
    Description: AppSync API URL
    Value: !GetAtt AppSyncStack.Outputs.AppSyncApiUrl
    Export:
      Name: !Sub nlmonorepo-${AppName}-${Stage}-api-url

  ApiId:
    Description: AppSync API ID
    Value: !GetAtt AppSyncStack.Outputs.AppSyncApiId
    Export:
      Name: !Sub nlmonorepo-${AppName}-${Stage}-api-id

  UserPoolId:
    Description: "Cognito User Pool ID for the application"
    Value: !GetAtt CognitoStack.Outputs.UserPoolId
    Export:
      Name: !Sub "nlmonorepo-${AppName}-${Stage}-user-pool-id"

  UserPoolClientId:
    Description: "Cognito User Pool Client ID for the application"
    Value: !GetAtt CognitoStack.Outputs.UserPoolClientId
    Export:
      Name: !Sub "nlmonorepo-${AppName}-${Stage}-user-pool-client-id"

  IdentityPoolId:
    Description: "Cognito Identity Pool ID for the application"
    Value: !GetAtt CognitoStack.Outputs.IdentityPoolId
    Export:
      Name: !Sub "nlmonorepo-${AppName}-${Stage}-identity-pool-id"

  WebsiteBucket:
    Description: "S3 bucket for frontend website assets"
    Value: !GetAtt S3Stack.Outputs.AWSEBucketName
    Export:
      Name: !Sub "nlmonorepo-${AppName}-${Stage}-website-bucket"

  CloudFrontDistributionId:
    Description: "CloudFront Distribution ID"
    Value: !GetAtt CloudFrontStack.Outputs.CloudFrontDistributionId
    Export:
      Name: !Sub "nlmonorepo-${AppName}-${Stage}-cloudfront-id"

  CloudFrontDomainName:
    Description: "CloudFront Distribution Domain Name"
    Value: !GetAtt CloudFrontStack.Outputs.CloudFrontDomainName
    Export:
      Name: !Sub "nlmonorepo-${AppName}-${Stage}-cloudfront-domain"

  DataTableName:
    Description: "DynamoDB Data Table Name"
    Value: !GetAtt DynamoDbStack.Outputs.DataTableName
    Export:
      Name: !Sub "nlmonorepo-${AppName}-${Stage}-datatable-name"

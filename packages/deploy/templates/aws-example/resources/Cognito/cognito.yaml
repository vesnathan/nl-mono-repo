AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS Example Cognito User Pool Resources"

Parameters:
  Stage:
    Type: String
    Description: Deployment stage (e.g., dev, prod)
  AppName:
    Type: String
    Description: Application short name used in exported resource names

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub "nlmonorepo-awse-userpool-${Stage}"
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      MfaConfiguration: "OFF"
      UserPoolTags:
        Stack: !Sub "nlmonorepo-awse-${Stage}"

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub "nlmonorepo-awse-client-${Stage}"
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO

  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: !Sub "nlmonorepo_awse_identity_pool_${Stage}"
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId: !Ref UserPoolClient
          ProviderName: !GetAtt UserPool.ProviderName

  IdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref IdentityPool
      Roles:
        authenticated: !GetAtt AuthenticatedRole.Arn

  AuthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "nlmonorepo-awse-authenticated-role-${Stage}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref IdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSAppSyncInvokeFullAccess

Outputs:
  UserPoolId:
    Description: ID of the Cognito User Pool
    Value: !Ref UserPool
    # Export removed: top-level template will declare global export

  UserPoolArn:
    Description: ARN of the Cognito User Pool
    Value: !GetAtt UserPool.Arn

  UserPoolClientId:
    Description: ID of the Cognito User Pool Client
    Value: !Ref UserPoolClient
    # Export removed: top-level template will declare global export

  UserPoolProviderName:
    Description: Provider name of the Cognito User Pool
    Value: !GetAtt UserPool.ProviderName
    Export:
      Name: !Sub "nlmonorepo-awse-${Stage}-user-pool-provider-name"

  IdentityPoolId:
    Description: ID of the Cognito Identity Pool
    Value: !Ref IdentityPool
    # Export removed: top-level template will declare global export

/**
 * AUTO-GENERATED FILE - DO NOT EDIT DIRECTLY
 * 
 * This file is automatically generated from:
 * ../cloudwatchlive/backend/lambda/sendWelcomeEmail.ts
 * 
 * To make changes, edit the source TypeScript file and run the build.
 * 
 * Generated: 2025-10-08T23:57:57.178Z
 */

"use strict";var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var h=Object.prototype.hasOwnProperty;var g=(o,e)=>{for(var t in e)i(o,t,{get:e[t],enumerable:!0})},y=(o,e,t,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of m(e))!h.call(o,s)&&s!==t&&i(o,s,{get:()=>e[s],enumerable:!(a=p(e,s))||a.enumerable});return o};var b=o=>y(i({},"__esModule",{value:!0}),o);var E={};g(E,{handler:()=>C});module.exports=b(E);var r=require("@aws-sdk/client-ses"),v=new r.SESClient({region:process.env.AWS_REGION||"ap-southeast-2"}),x=process.env.FROM_EMAIL||"noreply@cloudwatchlive.com",f=process.env.APP_URL||"https://cloudwatchlive.com",C=async o=>{console.log("Sending welcome email to:",o.userEmail);let{userEmail:e,userFirstName:t,userLastName:a,userId:s}=o,c=`${f}/login?userId=${s}`,l=`
    <!DOCTYPE html>
    <html>
      <head>
        <style>
          body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
          }
          .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
          }
          .header {
            background-color: #4CAF50;
            color: white;
            padding: 20px;
            text-align: center;
            border-radius: 5px 5px 0 0;
          }
          .content {
            background-color: #f9f9f9;
            padding: 30px;
            border-radius: 0 0 5px 5px;
          }
          .button {
            display: inline-block;
            padding: 12px 30px;
            background-color: #4CAF50;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            margin: 20px 0;
          }
          .footer {
            text-align: center;
            margin-top: 20px;
            font-size: 12px;
            color: #666;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>Welcome to CloudWatch Live!</h1>
          </div>
          <div class="content">
            <p>Hello ${t} ${a},</p>
            <p>Your account has been created successfully. Click the button below to access your account:</p>
            <div style="text-align: center;">
              <a href="${c}" class="button">Access Your Account</a>
            </div>
            <p>If the button doesn't work, copy and paste this link into your browser:</p>
            <p style="word-break: break-all; color: #4CAF50;">${c}</p>
            <p>If you have any questions, please don't hesitate to contact our support team.</p>
            <p>Best regards,<br>The CloudWatch Live Team</p>
          </div>
          <div class="footer">
            <p>This is an automated message. Please do not reply to this email.</p>
          </div>
        </div>
      </body>
    </html>
  `,d=`
    Welcome to CloudWatch Live!
    
    Hello ${t} ${a},
    
    Your account has been created successfully. Click the link below to access your account:
    
    ${c}
    
    If you have any questions, please don't hesitate to contact our support team.
    
    Best regards,
    The CloudWatch Live Team
    
    This is an automated message. Please do not reply to this email.
  `,u=new r.SendEmailCommand({Source:x,Destination:{ToAddresses:[e]},Message:{Subject:{Data:"Welcome to CloudWatch Live - Your Account is Ready!",Charset:"UTF-8"},Body:{Html:{Data:l,Charset:"UTF-8"},Text:{Data:d,Charset:"UTF-8"}}}});try{let n=await v.send(u);return console.log("Email sent successfully:",n.MessageId),{statusCode:200,body:JSON.stringify({message:"Email sent successfully",messageId:n.MessageId})}}catch(n){throw console.error("Error sending email:",n),n}};0&&(module.exports={handler});
